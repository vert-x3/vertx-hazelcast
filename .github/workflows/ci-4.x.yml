name: vertx-hazelcast (4.x)
on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9x]+'
  pull_request:
    branches:
      - master
      - '[0-9]+.[0-9x]+'
  schedule:
    - cron:  '0 4 * * *'
jobs:
  Test:
    name: Run tests
    strategy:
      matrix:
        os: [ubuntu-latest]
        jdk: [8,11]
        hz: [4.2.8,5.3.5]
        exclude:
          - jdk: 8
            hz: 5.3.5
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.jdk }}
          distribution: temurin
      - name: Run tests
        run: mvn -s .github/maven-ci-settings.xml -B -Dhazelcast.version=${{ matrix.hz }} -DtestLogLevel=OFF test
  IT:
    name: Run integration tests
    strategy:
      matrix:
        os: [ubuntu-latest]
        jdk: [8,11]
        hz: [4.2.8,5.3.5]
        exclude:
          - jdk: 8
            hz: 5.3.5
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.jdk }}
          distribution: temurin
      - name: Run integration tests
        run: mvn -s .github/maven-ci-settings.xml -B -Dhazelcast.version=${{ matrix.hz }} -DtestLogLevel=OFF -Dtest=DoesNotExists verify
  Deploy:
    name: Deploy to OSSRH
    if: ${{ github.repository_owner == 'vert-x3' && (github.event_name == 'push' || github.event_name == 'schedule') }}
    needs: Test
    runs-on: ubuntu-latest
    env:
      VERTX_NEXUS_USERNAME: ${{ secrets.VERTX_NEXUS_USERNAME }}
      VERTX_NEXUS_PASSWORD: ${{ secrets.VERTX_NEXUS_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: temurin
      - name: Get project version
        run: echo "PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:evaluate -Dexpression=project.version -B | grep -v '\[')" >> $GITHUB_ENV
      - name: Maven deploy
        if: ${{ endsWith(env.PROJECT_VERSION, '-SNAPSHOT') }}
        run: mvn deploy -s .github/maven-cd-settings.xml -DskipTests -B
